# GenerativeModel-HMM implementation
#
#
SHELL=/bin/bash
PYTHON=python

SRC=src
BIN=bin
DATA=data
MODELS=models
nepochs=2
nclasses=2
MODELS_INTERM=$(shell echo $(MODELS)/epoch{1..$(nepochs)}.mdl)
training_data=$(DATA)/train13.pkl
testing_data=$(DATA)/test13.pkl

all: 
	echo $(MODELS_INTERM)

prepare_data: $(training_data) $(testing_data)
	$(PYTHON) $(BIN)/prepare_data.py $(nclasses) $^

train: $(MODELS)/final.mdl
	for i in $(MODELS_INTERM); do \
		$(MAKE) -f Makefile_run -s $$i; \
		sleep 1;\
	done
	echo "Done" > $^


$(MODELS)/%.mdl: $(MODELS)/%_class1.mdlc $(MODELS)/%_class2.mdlc 
	$(PYTHON) $(BIN)/aggregate_models.py $@
	$(PYTHON) $(BIN)/compute_error.py $@ $(training_data) $(testing_data)


$(MODELS)/%.mdlc:
	echo $(PYTHON) $(BIN)/train_class.py $(training_data) $@

clean:
	rm -rf $(DATA)/train*_*.pkl
	rm -rf $(DATA)/test*_*.pkl
	rm -rf $(MODELS)/epoch*.mdl
	rm -rf $(MODELS)/epoch*_class_*.mdlc



.SECONDARY: $(MODELS)/%.mdlc
